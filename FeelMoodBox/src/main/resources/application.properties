# H2 DB
# PUTS DATA IN A FILE patients IN A MAP data IN YOUR INTELLIJ PROJECT HERE
#spring.datasource.url=jdbc:postgresql://193.191.177.115/${FEELMOODBOX_DB}
spring.datasource.url=jdbc:postgresql://193.191.177.115/mijn_applicatie_database
#spring.datasource.username=${FEELMOODBOX_USER}
spring.datasource.username=postgres
#spring.datasource.password=${FEELMOODBOX_PASSWORD}
spring.datasource.password=koelkast
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.h2.console.enabled=true
spring.h2.console.path=/h2

spring.datasource.name=products

spring.jpa.hibernate.ddl-auto=create

#server.port=8000

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true

# spring.datasource.url=jdbc:postgresql://193.191.177.103:5432/${KODAMA_DB}
# spring.datasource.username=${KODAMA_USER}
# spring.datasource.password=${KODAMA_PASS}

spring.datasource.url=jdbc:postgresql://193.191.177.115/${FEELMOODBOX_DB}
spring.datasource.username=${FEELMOODBOX_USER}
spring.datasource.password=${FEELMOODBOX_PASSWORD}

spring.sql.init.mode=always
spring.datasource.initialize=true
spring.sql.init.schema-locations=classpath:/schema.sql,classpath:/data.sql
spring.sql.init.continue-on-error=true